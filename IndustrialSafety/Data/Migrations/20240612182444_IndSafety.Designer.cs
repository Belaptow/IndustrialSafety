// <auto-generated />
using System;
using IndustrialSafety.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IndustrialSafety.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240612182444_IndSafety")]
    partial class IndSafety
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("ChildEntitySequence");

            modelBuilder.HasSequence("LegalEntitySequence");

            modelBuilder.HasSequence("RecipientSequence");

            modelBuilder.Entity("IndustrialSafetyLib.Commons.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Commons.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Австралийский Союз",
                            Name = "Австралия"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Австрийская Республика",
                            Name = "Австрия"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Азербайджанская Республика",
                            Name = "Азербайджан"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Республика Албания",
                            Name = "Албания"
                        },
                        new
                        {
                            Id = 5,
                            FullName = "Алжирская Народная Демократическая Республика",
                            Name = "Алжир"
                        },
                        new
                        {
                            Id = 6,
                            FullName = "Республика Ангола",
                            Name = "Ангола"
                        },
                        new
                        {
                            Id = 7,
                            FullName = "Княжество Андорра",
                            Name = "Андорра"
                        },
                        new
                        {
                            Id = 8,
                            FullName = "Антигуа и Барбуда",
                            Name = "Антигуа и Барбуда"
                        },
                        new
                        {
                            Id = 9,
                            FullName = "Аргентинская Республика",
                            Name = "Аргентина"
                        },
                        new
                        {
                            Id = 10,
                            FullName = "Республика Армения",
                            Name = "Армения"
                        },
                        new
                        {
                            Id = 11,
                            FullName = "Исламский Эмират Афганистан",
                            Name = "Афганистан"
                        },
                        new
                        {
                            Id = 12,
                            FullName = "Содружество Багамских Островов",
                            Name = "Багамы"
                        },
                        new
                        {
                            Id = 13,
                            FullName = "Народная Республика Бангладеш",
                            Name = "Бангладеш"
                        },
                        new
                        {
                            Id = 14,
                            FullName = "Барбадос",
                            Name = "Барбадос"
                        },
                        new
                        {
                            Id = 15,
                            FullName = "Королевство Бахрейн",
                            Name = "Бахрейн"
                        },
                        new
                        {
                            Id = 16,
                            FullName = "Белиз",
                            Name = "Белиз"
                        },
                        new
                        {
                            Id = 17,
                            FullName = "Республика Беларусь",
                            Name = "Белоруссия"
                        },
                        new
                        {
                            Id = 18,
                            FullName = "Королевство Бельгия",
                            Name = "Бельгия"
                        },
                        new
                        {
                            Id = 19,
                            FullName = "Республика Бенин",
                            Name = "Бенин"
                        },
                        new
                        {
                            Id = 20,
                            FullName = "Республика Болгария",
                            Name = "Болгария"
                        },
                        new
                        {
                            Id = 21,
                            FullName = "Многонациональное Государство Боливия",
                            Name = "Боливия"
                        },
                        new
                        {
                            Id = 22,
                            FullName = "Босния и Герцеговина",
                            Name = "Босния и Герцеговина"
                        },
                        new
                        {
                            Id = 23,
                            FullName = "Республика Ботсвана",
                            Name = "Ботсвана"
                        },
                        new
                        {
                            Id = 24,
                            FullName = "Федеративная Республика Бразилия",
                            Name = "Бразилия"
                        },
                        new
                        {
                            Id = 25,
                            FullName = "Государство Бруней-Даруссалам",
                            Name = "Бруней"
                        },
                        new
                        {
                            Id = 26,
                            FullName = "Буркина-Фасо",
                            Name = "Буркина-Фасо"
                        },
                        new
                        {
                            Id = 27,
                            FullName = "Республика Бурунди",
                            Name = "Бурунди"
                        },
                        new
                        {
                            Id = 28,
                            FullName = "Королевство Бутан",
                            Name = "Бутан"
                        },
                        new
                        {
                            Id = 29,
                            FullName = "Республика Вануату",
                            Name = "Вануату"
                        },
                        new
                        {
                            Id = 30,
                            FullName = "Соединённое Королевство Великобритании и Северной Ирландии",
                            Name = "Великобритания"
                        },
                        new
                        {
                            Id = 31,
                            FullName = "Венгрия",
                            Name = "Венгрия"
                        },
                        new
                        {
                            Id = 32,
                            FullName = "Боливарианская Республика Венесуэла",
                            Name = "Венесуэла"
                        },
                        new
                        {
                            Id = 33,
                            FullName = "Демократическая Республика Восточный Тимор",
                            Name = "Восточный Тимор"
                        },
                        new
                        {
                            Id = 34,
                            FullName = "Социалистическая Республика Вьетнам",
                            Name = "Вьетнам"
                        },
                        new
                        {
                            Id = 35,
                            FullName = "Габонская Республика",
                            Name = "Габон"
                        },
                        new
                        {
                            Id = 36,
                            FullName = "Республика Гаити",
                            Name = "Гаити"
                        },
                        new
                        {
                            Id = 37,
                            FullName = "Кооперативная Республика Гайана",
                            Name = "Гайана"
                        },
                        new
                        {
                            Id = 38,
                            FullName = "Республика Гамбия",
                            Name = "Гамбия"
                        },
                        new
                        {
                            Id = 39,
                            FullName = "Республика Гана",
                            Name = "Гана"
                        },
                        new
                        {
                            Id = 40,
                            FullName = "Республика Гватемала",
                            Name = "Гватемала"
                        },
                        new
                        {
                            Id = 41,
                            FullName = "Гвинейская Республика",
                            Name = "Гвинея"
                        },
                        new
                        {
                            Id = 42,
                            FullName = "Республика Гвинея-Бисау",
                            Name = "Гвинея-Бисау"
                        },
                        new
                        {
                            Id = 43,
                            FullName = "Федеративная Республика Германия",
                            Name = "Германия"
                        },
                        new
                        {
                            Id = 44,
                            FullName = "Республика Гондурас",
                            Name = "Гондурас"
                        },
                        new
                        {
                            Id = 45,
                            FullName = "Гренада",
                            Name = "Гренада"
                        },
                        new
                        {
                            Id = 46,
                            FullName = "Греческая Республика",
                            Name = "Греция"
                        },
                        new
                        {
                            Id = 47,
                            FullName = "Грузия",
                            Name = "Грузия"
                        },
                        new
                        {
                            Id = 48,
                            FullName = "Королевство Дания",
                            Name = "Дания"
                        },
                        new
                        {
                            Id = 49,
                            FullName = "Республика Джибути",
                            Name = "Джибути"
                        },
                        new
                        {
                            Id = 50,
                            FullName = "Содружество Доминики",
                            Name = "Доминика"
                        },
                        new
                        {
                            Id = 51,
                            FullName = "Доминиканская Республика",
                            Name = "Доминикана"
                        },
                        new
                        {
                            Id = 52,
                            FullName = "Арабская Республика Египет",
                            Name = "Египет"
                        },
                        new
                        {
                            Id = 53,
                            FullName = "Республика Замбия",
                            Name = "Замбия"
                        },
                        new
                        {
                            Id = 54,
                            FullName = "Республика Зимбабве",
                            Name = "Зимбабве"
                        },
                        new
                        {
                            Id = 55,
                            FullName = "Государство Израиль",
                            Name = "Израиль"
                        },
                        new
                        {
                            Id = 56,
                            FullName = "Республика Индия",
                            Name = "Индия"
                        },
                        new
                        {
                            Id = 57,
                            FullName = "Республика Индонезия",
                            Name = "Индонезия"
                        },
                        new
                        {
                            Id = 58,
                            FullName = "Иорданское Хашимитское Королевство",
                            Name = "Иордания"
                        },
                        new
                        {
                            Id = 59,
                            FullName = "Республика Ирак",
                            Name = "Ирак"
                        },
                        new
                        {
                            Id = 60,
                            FullName = "Исламская Республика Иран",
                            Name = "Иран"
                        },
                        new
                        {
                            Id = 61,
                            FullName = "Республика Ирландия",
                            Name = "Ирландия"
                        },
                        new
                        {
                            Id = 62,
                            FullName = "Исландия",
                            Name = "Исландия"
                        },
                        new
                        {
                            Id = 63,
                            FullName = "Королевство Испания",
                            Name = "Испания"
                        },
                        new
                        {
                            Id = 64,
                            FullName = "Итальянская Республика",
                            Name = "Италия"
                        },
                        new
                        {
                            Id = 65,
                            FullName = "Йеменская Республика",
                            Name = "Йемен"
                        },
                        new
                        {
                            Id = 66,
                            FullName = "Республика Кабо-Верде",
                            Name = "Кабо-Верде"
                        },
                        new
                        {
                            Id = 67,
                            FullName = "Республика Казахстан",
                            Name = "Казахстан"
                        },
                        new
                        {
                            Id = 68,
                            FullName = "Королевство Камбоджа",
                            Name = "Камбоджа"
                        },
                        new
                        {
                            Id = 69,
                            FullName = "Республика Камерун",
                            Name = "Камерун"
                        },
                        new
                        {
                            Id = 70,
                            FullName = "Канада",
                            Name = "Канада"
                        },
                        new
                        {
                            Id = 71,
                            FullName = "Государство Катар",
                            Name = "Катар"
                        },
                        new
                        {
                            Id = 72,
                            FullName = "Республика Кения",
                            Name = "Кения"
                        },
                        new
                        {
                            Id = 73,
                            FullName = "Республика Кипр",
                            Name = "Кипр"
                        },
                        new
                        {
                            Id = 74,
                            FullName = "Республика Кирибати",
                            Name = "Кирибати"
                        },
                        new
                        {
                            Id = 75,
                            FullName = "Китайская Народная Республика",
                            Name = "Китай"
                        },
                        new
                        {
                            Id = 76,
                            FullName = "Республика Колумбия",
                            Name = "Колумбия"
                        },
                        new
                        {
                            Id = 77,
                            FullName = "Союз Коморских Островов",
                            Name = "Коморы"
                        },
                        new
                        {
                            Id = 78,
                            FullName = "Республика Конго",
                            Name = "Конго"
                        },
                        new
                        {
                            Id = 79,
                            FullName = "Демократическая Республика Конго",
                            Name = "ДР Конго"
                        },
                        new
                        {
                            Id = 80,
                            FullName = "Корейская Народно-Демократическая Республика",
                            Name = "КНДР"
                        },
                        new
                        {
                            Id = 81,
                            FullName = "Республика Корея",
                            Name = "Корея"
                        },
                        new
                        {
                            Id = 82,
                            FullName = "Республика Коста-Рика",
                            Name = "Коста-Рика"
                        },
                        new
                        {
                            Id = 83,
                            FullName = "Республика Кот-д’Ивуар",
                            Name = "Кот-д’Ивуар"
                        },
                        new
                        {
                            Id = 84,
                            FullName = "Республика Куба",
                            Name = "Куба"
                        },
                        new
                        {
                            Id = 85,
                            FullName = "Государство Кувейт",
                            Name = "Кувейт"
                        },
                        new
                        {
                            Id = 86,
                            FullName = "Кыргызская Республика",
                            Name = "Кыргызстан"
                        },
                        new
                        {
                            Id = 87,
                            FullName = "Лаосская Народно-Демократическая Республика",
                            Name = "Лаос"
                        },
                        new
                        {
                            Id = 88,
                            FullName = "Латвийская Республика",
                            Name = "Латвия"
                        },
                        new
                        {
                            Id = 89,
                            FullName = "Королевство Лесото",
                            Name = "Лесото"
                        },
                        new
                        {
                            Id = 90,
                            FullName = "Республика Либерия",
                            Name = "Либерия"
                        },
                        new
                        {
                            Id = 91,
                            FullName = "Ливанская Республика",
                            Name = "Ливан"
                        },
                        new
                        {
                            Id = 92,
                            FullName = "Государство Ливия",
                            Name = "Ливия"
                        },
                        new
                        {
                            Id = 93,
                            FullName = "Литовская Республика",
                            Name = "Литва"
                        },
                        new
                        {
                            Id = 94,
                            FullName = "Княжество Лихтенштейн",
                            Name = "Лихтенштейн"
                        },
                        new
                        {
                            Id = 95,
                            FullName = "Великое Герцогство Люксембург",
                            Name = "Люксембург"
                        },
                        new
                        {
                            Id = 96,
                            FullName = "Республика Маврикий",
                            Name = "Маврикий"
                        },
                        new
                        {
                            Id = 97,
                            FullName = "Исламская Республика Мавритания",
                            Name = "Мавритания"
                        },
                        new
                        {
                            Id = 98,
                            FullName = "Республика Мадагаскар",
                            Name = "Мадагаскар"
                        },
                        new
                        {
                            Id = 99,
                            FullName = "Республика Малави",
                            Name = "Малави"
                        },
                        new
                        {
                            Id = 100,
                            FullName = "Малайзия",
                            Name = "Малайзия"
                        },
                        new
                        {
                            Id = 101,
                            FullName = "Республика Мали",
                            Name = "Мали"
                        },
                        new
                        {
                            Id = 102,
                            FullName = "Мальдивская Республика",
                            Name = "Мальдивы"
                        },
                        new
                        {
                            Id = 103,
                            FullName = "Республика Мальта",
                            Name = "Мальта"
                        },
                        new
                        {
                            Id = 104,
                            FullName = "Королевство Марокко",
                            Name = "Марокко"
                        },
                        new
                        {
                            Id = 105,
                            FullName = "Республика Маршалловы Острова",
                            Name = "Маршалловы Острова"
                        },
                        new
                        {
                            Id = 106,
                            FullName = "Мексиканские Соединённые Штаты",
                            Name = "Мексика"
                        },
                        new
                        {
                            Id = 107,
                            FullName = "Федеративные Штаты Микронезии",
                            Name = "Микронезия"
                        },
                        new
                        {
                            Id = 108,
                            FullName = "Республика Мозамбик",
                            Name = "Мозамбик"
                        },
                        new
                        {
                            Id = 109,
                            FullName = "Республика Молдова",
                            Name = "Молдавия"
                        },
                        new
                        {
                            Id = 110,
                            FullName = "Княжество Монако",
                            Name = "Монако"
                        },
                        new
                        {
                            Id = 111,
                            FullName = "Монголия",
                            Name = "Монголия"
                        },
                        new
                        {
                            Id = 112,
                            FullName = "Республика Союз Мьянма",
                            Name = "Мьянма"
                        },
                        new
                        {
                            Id = 113,
                            FullName = "Республика Намибия",
                            Name = "Намибия"
                        },
                        new
                        {
                            Id = 114,
                            FullName = "Республика Науру",
                            Name = "Науру"
                        },
                        new
                        {
                            Id = 115,
                            FullName = "Федеративная Демократическая Республика Непал",
                            Name = "Непал"
                        },
                        new
                        {
                            Id = 116,
                            FullName = "Республика Нигер",
                            Name = "Нигер"
                        },
                        new
                        {
                            Id = 117,
                            FullName = "Федеративная Республика Нигерия",
                            Name = "Нигерия"
                        },
                        new
                        {
                            Id = 118,
                            FullName = "Королевство Нидерландов",
                            Name = "Нидерланды"
                        },
                        new
                        {
                            Id = 119,
                            FullName = "Республика Никарагуа",
                            Name = "Никарагуа"
                        },
                        new
                        {
                            Id = 120,
                            FullName = "Новая Зеландия",
                            Name = "Новая Зеландия"
                        },
                        new
                        {
                            Id = 121,
                            FullName = "Королевство Норвегия",
                            Name = "Норвегия"
                        },
                        new
                        {
                            Id = 122,
                            FullName = "Объединённые Арабские Эмираты",
                            Name = "ОАЭ"
                        },
                        new
                        {
                            Id = 123,
                            FullName = "Султанат Оман",
                            Name = "Оман"
                        },
                        new
                        {
                            Id = 124,
                            FullName = "Исламская Республика Пакистан",
                            Name = "Пакистан"
                        },
                        new
                        {
                            Id = 125,
                            FullName = "Республика Палау",
                            Name = "Палау"
                        },
                        new
                        {
                            Id = 126,
                            FullName = "Республика Панама",
                            Name = "Панама"
                        },
                        new
                        {
                            Id = 127,
                            FullName = "Независимое Государство Папуа&#160;— Новая Гвинея",
                            Name = "Папуа — Новая Гвинея"
                        },
                        new
                        {
                            Id = 128,
                            FullName = "Республика Парагвай",
                            Name = "Парагвай"
                        },
                        new
                        {
                            Id = 129,
                            FullName = "Республика Перу",
                            Name = "Перу"
                        },
                        new
                        {
                            Id = 130,
                            FullName = "Республика Польша",
                            Name = "Польша"
                        },
                        new
                        {
                            Id = 131,
                            FullName = "Португальская Республика",
                            Name = "Португалия"
                        },
                        new
                        {
                            Id = 132,
                            FullName = "Российская Федерация",
                            Name = "Россия"
                        },
                        new
                        {
                            Id = 133,
                            FullName = "Республика Руанда",
                            Name = "Руанда"
                        },
                        new
                        {
                            Id = 134,
                            FullName = "Румыния",
                            Name = "Румыния"
                        },
                        new
                        {
                            Id = 135,
                            FullName = "Республика Эль-Сальвадор",
                            Name = "Сальвадор"
                        },
                        new
                        {
                            Id = 136,
                            FullName = "Независимое Государство Самоа",
                            Name = "Самоа"
                        },
                        new
                        {
                            Id = 137,
                            FullName = "Республика Сан-Марино",
                            Name = "Сан-Марино"
                        },
                        new
                        {
                            Id = 138,
                            FullName = "Демократическая Республика Сан-Томе и Принсипи",
                            Name = "Сан-Томе и Принсипи"
                        },
                        new
                        {
                            Id = 139,
                            FullName = "Королевство Саудовская Аравия",
                            Name = "Саудовская Аравия"
                        },
                        new
                        {
                            Id = 140,
                            FullName = "Республика Северная Македония",
                            Name = "Северная Македония"
                        },
                        new
                        {
                            Id = 141,
                            FullName = "Республика Сейшельские Острова",
                            Name = "Сейшелы"
                        },
                        new
                        {
                            Id = 142,
                            FullName = "Республика Сенегал",
                            Name = "Сенегал"
                        },
                        new
                        {
                            Id = 143,
                            FullName = "Сент-Винсент и Гренадины",
                            Name = "Сент-Винсент и Гренадины"
                        },
                        new
                        {
                            Id = 144,
                            FullName = "Федерация Сент-Китс и Невис",
                            Name = "Сент-Китс и Невис"
                        },
                        new
                        {
                            Id = 145,
                            FullName = "Сент-Люсия",
                            Name = "Сент-Люсия"
                        },
                        new
                        {
                            Id = 146,
                            FullName = "Республика Сербия",
                            Name = "Сербия"
                        },
                        new
                        {
                            Id = 147,
                            FullName = "Республика Сингапур",
                            Name = "Сингапур"
                        },
                        new
                        {
                            Id = 148,
                            FullName = "Сирийская Арабская Республика",
                            Name = "Сирия"
                        },
                        new
                        {
                            Id = 149,
                            FullName = "Словацкая Республика",
                            Name = "Словакия"
                        },
                        new
                        {
                            Id = 150,
                            FullName = "Республика Словения",
                            Name = "Словения"
                        },
                        new
                        {
                            Id = 151,
                            FullName = "Соединённые Штаты Америки",
                            Name = "США"
                        },
                        new
                        {
                            Id = 152,
                            FullName = "Соломоновы Острова",
                            Name = "Соломоновы Острова"
                        },
                        new
                        {
                            Id = 153,
                            FullName = "Федеративная Республика Сомали",
                            Name = "Сомали"
                        },
                        new
                        {
                            Id = 154,
                            FullName = "Республика Судан",
                            Name = "Судан"
                        },
                        new
                        {
                            Id = 155,
                            FullName = "Республика Суринам",
                            Name = "Суринам"
                        },
                        new
                        {
                            Id = 156,
                            FullName = "Республика Сьерра-Леоне",
                            Name = "Сьерра-Леоне"
                        },
                        new
                        {
                            Id = 157,
                            FullName = "Республика Таджикистан",
                            Name = "Таджикистан"
                        },
                        new
                        {
                            Id = 158,
                            FullName = "Королевство Таиланд",
                            Name = "Таиланд"
                        },
                        new
                        {
                            Id = 159,
                            FullName = "Объединённая Республика Танзания",
                            Name = "Танзания"
                        },
                        new
                        {
                            Id = 160,
                            FullName = "Тоголезская Республика",
                            Name = "Того"
                        },
                        new
                        {
                            Id = 161,
                            FullName = "Королевство Тонга",
                            Name = "Тонга"
                        },
                        new
                        {
                            Id = 162,
                            FullName = "Республика Тринидад и Тобаго",
                            Name = "Тринидад и Тобаго"
                        },
                        new
                        {
                            Id = 163,
                            FullName = "Тувалу",
                            Name = "Тувалу"
                        },
                        new
                        {
                            Id = 164,
                            FullName = "Тунисская Республика",
                            Name = "Тунис"
                        },
                        new
                        {
                            Id = 165,
                            FullName = "Туркменистан",
                            Name = "Туркменистан"
                        },
                        new
                        {
                            Id = 166,
                            FullName = "Турецкая Республика",
                            Name = "Турция"
                        },
                        new
                        {
                            Id = 167,
                            FullName = "Республика Уганда",
                            Name = "Уганда"
                        },
                        new
                        {
                            Id = 168,
                            FullName = "Республика Узбекистан",
                            Name = "Узбекистан"
                        },
                        new
                        {
                            Id = 169,
                            FullName = "Украина",
                            Name = "Украина"
                        },
                        new
                        {
                            Id = 170,
                            FullName = "Восточная Республика Уругвай",
                            Name = "Уругвай"
                        },
                        new
                        {
                            Id = 171,
                            FullName = "Республика Фиджи",
                            Name = "Фиджи"
                        },
                        new
                        {
                            Id = 172,
                            FullName = "Республика Филиппины",
                            Name = "Филиппины"
                        },
                        new
                        {
                            Id = 173,
                            FullName = "Финляндская Республика",
                            Name = "Финляндия"
                        },
                        new
                        {
                            Id = 174,
                            FullName = "Французская Республика",
                            Name = "Франция"
                        },
                        new
                        {
                            Id = 175,
                            FullName = "Республика Хорватия",
                            Name = "Хорватия"
                        },
                        new
                        {
                            Id = 176,
                            FullName = "Центральноафриканская Республика",
                            Name = "ЦАР"
                        },
                        new
                        {
                            Id = 177,
                            FullName = "Республика Чад",
                            Name = "Чад"
                        },
                        new
                        {
                            Id = 178,
                            FullName = "Черногория",
                            Name = "Черногория"
                        },
                        new
                        {
                            Id = 179,
                            FullName = "Чешская Республика",
                            Name = "Чехия"
                        },
                        new
                        {
                            Id = 180,
                            FullName = "Республика Чили",
                            Name = "Чили"
                        },
                        new
                        {
                            Id = 181,
                            FullName = "Швейцарская Конфедерация",
                            Name = "Швейцария"
                        },
                        new
                        {
                            Id = 182,
                            FullName = "Королевство Швеция",
                            Name = "Швеция"
                        },
                        new
                        {
                            Id = 183,
                            FullName = "Демократическая Социалистическая Республика Шри-Ланка",
                            Name = "Шри-Ланка"
                        },
                        new
                        {
                            Id = 184,
                            FullName = "Республика Эквадор",
                            Name = "Эквадор"
                        },
                        new
                        {
                            Id = 185,
                            FullName = "Республика Экваториальная Гвинея",
                            Name = "Экваториальная Гвинея"
                        },
                        new
                        {
                            Id = 186,
                            FullName = "Государство Эритрея",
                            Name = "Эритрея"
                        },
                        new
                        {
                            Id = 187,
                            FullName = "Королевство Эсватини",
                            Name = "Эсватини"
                        },
                        new
                        {
                            Id = 188,
                            FullName = "Эстонская Республика",
                            Name = "Эстония"
                        },
                        new
                        {
                            Id = 189,
                            FullName = "Федеративная Демократическая Республика Эфиопия",
                            Name = "Эфиопия"
                        },
                        new
                        {
                            Id = 190,
                            FullName = "Южно-Африканская Республика",
                            Name = "ЮАР"
                        },
                        new
                        {
                            Id = 191,
                            FullName = "Республика Южный Судан",
                            Name = "Южный Судан"
                        },
                        new
                        {
                            Id = 192,
                            FullName = "Ямайка",
                            Name = "Ямайка"
                        },
                        new
                        {
                            Id = 193,
                            FullName = "Государство Япония",
                            Name = "Япония"
                        });
                });

            modelBuilder.Entity("IndustrialSafetyLib.Commons.DayOfWeek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DaysOfWeek");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Commons.LegalEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [LegalEntitySequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("IndustrialSafetyLib.Commons.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "79",
                            CountryId = 132,
                            Name = "Республика Адыгея"
                        },
                        new
                        {
                            Id = 2,
                            Code = "84",
                            CountryId = 132,
                            Name = "Республика Алтай"
                        },
                        new
                        {
                            Id = 3,
                            Code = "80",
                            CountryId = 132,
                            Name = "Республика Башкортостан"
                        },
                        new
                        {
                            Id = 4,
                            Code = "81",
                            CountryId = 132,
                            Name = "Республика Бурятия"
                        },
                        new
                        {
                            Id = 5,
                            Code = "82",
                            CountryId = 132,
                            Name = "Республика Дагестан"
                        },
                        new
                        {
                            Id = 6,
                            Code = "21",
                            CountryId = 132,
                            Name = "Донецкая Народная Республика"
                        },
                        new
                        {
                            Id = 7,
                            Code = "26",
                            CountryId = 132,
                            Name = "Республика Ингушетия"
                        },
                        new
                        {
                            Id = 8,
                            Code = "83",
                            CountryId = 132,
                            Name = "Кабардино-Балкарская Республика"
                        },
                        new
                        {
                            Id = 9,
                            Code = "85",
                            CountryId = 132,
                            Name = "Республика Калмыкия"
                        },
                        new
                        {
                            Id = 10,
                            Code = "91",
                            CountryId = 132,
                            Name = "Карачаево-Черкесская Республика"
                        },
                        new
                        {
                            Id = 11,
                            Code = "86",
                            CountryId = 132,
                            Name = "Республика Карелия"
                        },
                        new
                        {
                            Id = 12,
                            Code = "87",
                            CountryId = 132,
                            Name = "Республика Коми"
                        },
                        new
                        {
                            Id = 13,
                            Code = "43",
                            CountryId = 132,
                            Name = "Луганская Народная Республика"
                        },
                        new
                        {
                            Id = 14,
                            Code = "88",
                            CountryId = 132,
                            Name = "Республика Марий Эл"
                        },
                        new
                        {
                            Id = 15,
                            Code = "89",
                            CountryId = 132,
                            Name = "Республика Мордовия"
                        },
                        new
                        {
                            Id = 16,
                            Code = "98",
                            CountryId = 132,
                            Name = "Республика Саха (Якутия)"
                        },
                        new
                        {
                            Id = 17,
                            Code = "90",
                            CountryId = 132,
                            Name = "Республика Северная Осетия — Алания"
                        },
                        new
                        {
                            Id = 18,
                            Code = "92",
                            CountryId = 132,
                            Name = "Республика Татарстан"
                        },
                        new
                        {
                            Id = 19,
                            Code = "93",
                            CountryId = 132,
                            Name = "Республика Тыва"
                        },
                        new
                        {
                            Id = 20,
                            Code = "94",
                            CountryId = 132,
                            Name = "Удмуртская Республика"
                        },
                        new
                        {
                            Id = 21,
                            Code = "95",
                            CountryId = 132,
                            Name = "Республика Хакасия"
                        },
                        new
                        {
                            Id = 22,
                            Code = "96",
                            CountryId = 132,
                            Name = "Чеченская Республика"
                        },
                        new
                        {
                            Id = 23,
                            Code = "97",
                            CountryId = 132,
                            Name = "Чувашская Республика — Чувашия"
                        },
                        new
                        {
                            Id = 24,
                            Code = "1",
                            CountryId = 132,
                            Name = "Алтайский край"
                        },
                        new
                        {
                            Id = 25,
                            Code = "76",
                            CountryId = 132,
                            Name = "Забайкальский край"
                        },
                        new
                        {
                            Id = 26,
                            Code = "30",
                            CountryId = 132,
                            Name = "Камчатский край"
                        },
                        new
                        {
                            Id = 27,
                            Code = "3",
                            CountryId = 132,
                            Name = "Краснодарский край"
                        },
                        new
                        {
                            Id = 28,
                            Code = "4",
                            CountryId = 132,
                            Name = "Красноярский край"
                        },
                        new
                        {
                            Id = 29,
                            Code = "57",
                            CountryId = 132,
                            Name = "Пермский край"
                        },
                        new
                        {
                            Id = 30,
                            Code = "5",
                            CountryId = 132,
                            Name = "Приморский край"
                        },
                        new
                        {
                            Id = 31,
                            Code = "7",
                            CountryId = 132,
                            Name = "Ставропольский край"
                        },
                        new
                        {
                            Id = 32,
                            Code = "8",
                            CountryId = 132,
                            Name = "Хабаровский край"
                        },
                        new
                        {
                            Id = 33,
                            Code = "10",
                            CountryId = 132,
                            Name = "Амурская область"
                        },
                        new
                        {
                            Id = 34,
                            Code = "12",
                            CountryId = 132,
                            Name = "Астраханская область"
                        },
                        new
                        {
                            Id = 35,
                            Code = "14",
                            CountryId = 132,
                            Name = "Белгородская область"
                        },
                        new
                        {
                            Id = 36,
                            Code = "15",
                            CountryId = 132,
                            Name = "Брянская область"
                        },
                        new
                        {
                            Id = 37,
                            Code = "17",
                            CountryId = 132,
                            Name = "Владимирская область"
                        },
                        new
                        {
                            Id = 38,
                            Code = "18",
                            CountryId = 132,
                            Name = "Волгоградская область"
                        },
                        new
                        {
                            Id = 39,
                            Code = "19",
                            CountryId = 132,
                            Name = "Вологодская область"
                        },
                        new
                        {
                            Id = 40,
                            Code = "20",
                            CountryId = 132,
                            Name = "Воронежская область"
                        },
                        new
                        {
                            Id = 41,
                            Code = "23",
                            CountryId = 132,
                            Name = "Запорожская область"
                        },
                        new
                        {
                            Id = 42,
                            Code = "24",
                            CountryId = 132,
                            Name = "Ивановская область"
                        },
                        new
                        {
                            Id = 43,
                            Code = "25",
                            CountryId = 132,
                            Name = "Иркутская область"
                        },
                        new
                        {
                            Id = 44,
                            Code = "27",
                            CountryId = 132,
                            Name = "Калининградская область"
                        },
                        new
                        {
                            Id = 45,
                            Code = "29",
                            CountryId = 132,
                            Name = "Калужская область"
                        },
                        new
                        {
                            Id = 46,
                            Code = "33",
                            CountryId = 132,
                            Name = "Кировская область"
                        },
                        new
                        {
                            Id = 47,
                            Code = "34",
                            CountryId = 132,
                            Name = "Костромская область"
                        },
                        new
                        {
                            Id = 48,
                            Code = "37",
                            CountryId = 132,
                            Name = "Курганская область"
                        },
                        new
                        {
                            Id = 49,
                            Code = "38",
                            CountryId = 132,
                            Name = "Курская область"
                        },
                        new
                        {
                            Id = 50,
                            Code = "41",
                            CountryId = 132,
                            Name = "Ленинградская область"
                        },
                        new
                        {
                            Id = 51,
                            Code = "42",
                            CountryId = 132,
                            Name = "Липецкая область"
                        },
                        new
                        {
                            Id = 52,
                            Code = "44",
                            CountryId = 132,
                            Name = "Магаданская область"
                        },
                        new
                        {
                            Id = 53,
                            Code = "46",
                            CountryId = 132,
                            Name = "Московская область"
                        },
                        new
                        {
                            Id = 54,
                            Code = "47",
                            CountryId = 132,
                            Name = "Мурманская область"
                        },
                        new
                        {
                            Id = 55,
                            Code = "22",
                            CountryId = 132,
                            Name = "Нижегородская область"
                        },
                        new
                        {
                            Id = 56,
                            Code = "49",
                            CountryId = 132,
                            Name = "Новгородская область"
                        },
                        new
                        {
                            Id = 57,
                            Code = "50",
                            CountryId = 132,
                            Name = "Новосибирская область"
                        },
                        new
                        {
                            Id = 58,
                            Code = "52",
                            CountryId = 132,
                            Name = "Омская область"
                        },
                        new
                        {
                            Id = 59,
                            Code = "53",
                            CountryId = 132,
                            Name = "Оренбургская область"
                        },
                        new
                        {
                            Id = 60,
                            Code = "54",
                            CountryId = 132,
                            Name = "Орловская область"
                        },
                        new
                        {
                            Id = 61,
                            Code = "56",
                            CountryId = 132,
                            Name = "Пензенская область"
                        },
                        new
                        {
                            Id = 62,
                            Code = "58",
                            CountryId = 132,
                            Name = "Псковская область"
                        },
                        new
                        {
                            Id = 63,
                            Code = "60",
                            CountryId = 132,
                            Name = "Ростовская область"
                        },
                        new
                        {
                            Id = 64,
                            Code = "61",
                            CountryId = 132,
                            Name = "Рязанская область"
                        },
                        new
                        {
                            Id = 65,
                            Code = "36",
                            CountryId = 132,
                            Name = "Самарская область"
                        },
                        new
                        {
                            Id = 66,
                            Code = "63",
                            CountryId = 132,
                            Name = "Саратовская область"
                        },
                        new
                        {
                            Id = 67,
                            Code = "64",
                            CountryId = 132,
                            Name = "Сахалинская область"
                        },
                        new
                        {
                            Id = 68,
                            Code = "65",
                            CountryId = 132,
                            Name = "Свердловская область"
                        },
                        new
                        {
                            Id = 69,
                            Code = "66",
                            CountryId = 132,
                            Name = "Смоленская область"
                        },
                        new
                        {
                            Id = 70,
                            Code = "68",
                            CountryId = 132,
                            Name = "Тамбовская область"
                        },
                        new
                        {
                            Id = 71,
                            Code = "28",
                            CountryId = 132,
                            Name = "Тверская область"
                        },
                        new
                        {
                            Id = 72,
                            Code = "69",
                            CountryId = 132,
                            Name = "Томская область"
                        },
                        new
                        {
                            Id = 73,
                            Code = "70",
                            CountryId = 132,
                            Name = "Тульская область"
                        },
                        new
                        {
                            Id = 74,
                            Code = "73",
                            CountryId = 132,
                            Name = "Ульяновская область"
                        },
                        new
                        {
                            Id = 75,
                            Code = "74",
                            CountryId = 132,
                            Name = "Херсонская область"
                        },
                        new
                        {
                            Id = 76,
                            Code = "75",
                            CountryId = 132,
                            Name = "Челябинская область"
                        },
                        new
                        {
                            Id = 77,
                            Code = "78",
                            CountryId = 132,
                            Name = "Ярославская область"
                        },
                        new
                        {
                            Id = 78,
                            Code = "45",
                            CountryId = 132,
                            Name = "Москва"
                        },
                        new
                        {
                            Id = 79,
                            Code = "40",
                            CountryId = 132,
                            Name = "Санкт-Петербург"
                        },
                        new
                        {
                            Id = 80,
                            Code = "99",
                            CountryId = 132,
                            Name = "Еврейская АО"
                        },
                        new
                        {
                            Id = 81,
                            Code = "77",
                            CountryId = 132,
                            Name = "Чукотский АО"
                        });
                });

            modelBuilder.Entity("IndustrialSafetyLib.Commons.Sex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sexes");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Company.JobTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobTitles");
                });

            modelBuilder.Entity("IndustrialSafetyLib.CoreEntities.ChildEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [ChildEntitySequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("IndustrialSafetyLib.CoreEntities.Recipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [RecipientSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("IndustrialSafetyLib.CoreEntities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("IndustrialSafetyLib.Deals.PlaceInit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlaceInits");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Checkups.Checkup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActualDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditedBusinessUnitId")
                        .HasColumnType("int");

                    b.Property<int>("AuditorId")
                        .HasColumnType("int");

                    b.Property<string>("Goal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiatorId")
                        .HasColumnType("int");

                    b.Property<int>("KindId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfViolations")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PlannedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuditedBusinessUnitId");

                    b.HasIndex("AuditorId");

                    b.HasIndex("InitiatorId");

                    b.HasIndex("KindId");

                    b.ToTable("Checkups");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Checkups.Violation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("CheckupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("KindId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CheckupId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("KindId");

                    b.ToTable("Violations");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Settings.CheckupKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("CheckupKinds");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Settings.CheckupType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitId");

                    b.ToTable("CheckupTypes");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Settings.ViolationGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ViolationGroups");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Settings.ViolationKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViolationTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ViolationTypeId");

                    b.ToTable("ViolationKinds");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Settings.ViolationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViolationGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ViolationGroupId");

                    b.ToTable("ViolationTypes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IndustrialSafetyLib.Company.BusinessUnit", b =>
                {
                    b.HasBaseType("IndustrialSafetyLib.Commons.LegalEntity");

                    b.Property<int?>("CEOId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HeadCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("TRRC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CEOId");

                    b.HasIndex("HeadCompanyId");

                    b.ToTable("BusinessUnits");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Parties.Counterparty", b =>
                {
                    b.HasBaseType("IndustrialSafetyLib.Commons.LegalEntity");

                    b.Property<string>("NCEA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NCEO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NonResident")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PSRN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);
                });

            modelBuilder.Entity("IndustrialSafetyLib.CoreEntities.GroupMember", b =>
                {
                    b.HasBaseType("IndustrialSafetyLib.CoreEntities.ChildEntity");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasIndex("GroupId");

                    b.HasIndex("MemberId");

                    b.ToTable((string)null);
                });

            modelBuilder.Entity("IndustrialSafetyLib.Deals.PlaceInitBusinessUnit", b =>
                {
                    b.HasBaseType("IndustrialSafetyLib.CoreEntities.ChildEntity");

                    b.Property<int>("BusinessUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("PlaceInitId")
                        .HasColumnType("int");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("PlaceInitId");

                    b.ToTable("PlaceInitBusinessUnits");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Deals.PlaceInitDepartment", b =>
                {
                    b.HasBaseType("IndustrialSafetyLib.CoreEntities.ChildEntity");

                    b.Property<int?>("CheckupId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("PlaceInitId")
                        .HasColumnType("int");

                    b.HasIndex("CheckupId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PlaceInitId");

                    b.ToTable("PlaceInitDepartments");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Checkups.CheckupDepartment", b =>
                {
                    b.HasBaseType("IndustrialSafetyLib.CoreEntities.ChildEntity");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.HasIndex("DepartmentId");

                    b.ToTable("CheckupsDepartments");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Checkups.ViolationResponsible", b =>
                {
                    b.HasBaseType("IndustrialSafetyLib.CoreEntities.ChildEntity");

                    b.Property<string>("CorrectionMeasure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CorrectionTerm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ResponsibleId")
                        .HasColumnType("int");

                    b.Property<string>("Verification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("ResponsibleId");

                    b.ToTable("ViolationResponsibles");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Settings.CheckupNotififedBusinessUnit", b =>
                {
                    b.HasBaseType("IndustrialSafetyLib.CoreEntities.ChildEntity");

                    b.Property<int>("BusinessUnitId")
                        .HasColumnType("int");

                    b.HasIndex("BusinessUnitId");

                    b.ToTable("CheckupNotififedBusinessUnits");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Settings.CheckupTypeNotificationSetting", b =>
                {
                    b.HasBaseType("IndustrialSafetyLib.CoreEntities.ChildEntity");

                    b.Property<int?>("CheckupTypeId")
                        .HasColumnType("int");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.HasIndex("CheckupTypeId");

                    b.ToTable("CheckupTypeNotificationSettings");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Company.Employee", b =>
                {
                    b.HasBaseType("IndustrialSafetyLib.CoreEntities.Recipient");

                    b.Property<int>("BusinessUnitId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("PersonId");

                    b.HasIndex("UserId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("IndustrialSafetyLib.CoreEntities.Group", b =>
                {
                    b.HasBaseType("IndustrialSafetyLib.CoreEntities.Recipient");

                    b.ToTable((string)null);
                });

            modelBuilder.Entity("IndustrialSafetyLib.Parties.Company", b =>
                {
                    b.HasBaseType("IndustrialSafetyLib.Parties.Counterparty");

                    b.Property<double>("AverageRating")
                        .HasColumnType("float");

                    b.Property<double>("EquipmentRating")
                        .HasColumnType("float");

                    b.Property<double>("ProcurementRating")
                        .HasColumnType("float");

                    b.Property<double>("SupplyRating")
                        .HasColumnType("float");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Parties.Person", b =>
                {
                    b.HasBaseType("IndustrialSafetyLib.Parties.Counterparty");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CitizenshipId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SexId")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CitizenshipId");

                    b.HasIndex("SexId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Company.DepartmentMember", b =>
                {
                    b.HasBaseType("IndustrialSafetyLib.CoreEntities.GroupMember");

                    b.ToTable("DepartmentMembers");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Company.Department", b =>
                {
                    b.HasBaseType("IndustrialSafetyLib.CoreEntities.Group");

                    b.Property<int>("BusinessUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HeadOfficeId")
                        .HasColumnType("int");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("HeadOfficeId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Commons.City", b =>
                {
                    b.HasOne("IndustrialSafetyLib.Commons.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Commons.LegalEntity", b =>
                {
                    b.HasOne("IndustrialSafetyLib.Commons.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Commons.Region", b =>
                {
                    b.HasOne("IndustrialSafetyLib.Commons.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Checkups.Checkup", b =>
                {
                    b.HasOne("IndustrialSafetyLib.Company.BusinessUnit", "AuditedBusinessUnit")
                        .WithMany()
                        .HasForeignKey("AuditedBusinessUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndustrialSafetyLib.Company.Employee", "Auditor")
                        .WithMany()
                        .HasForeignKey("AuditorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndustrialSafetyLib.Deals.PlaceInit", "Initiator")
                        .WithMany()
                        .HasForeignKey("InitiatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndustrialSafetyLib.ProductionSafety.Settings.CheckupKind", "Kind")
                        .WithMany()
                        .HasForeignKey("KindId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AuditedBusinessUnit");

                    b.Navigation("Auditor");

                    b.Navigation("Initiator");

                    b.Navigation("Kind");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Checkups.Violation", b =>
                {
                    b.HasOne("IndustrialSafetyLib.Company.Employee", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndustrialSafetyLib.ProductionSafety.Checkups.Checkup", "Checkup")
                        .WithMany()
                        .HasForeignKey("CheckupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndustrialSafetyLib.Company.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndustrialSafetyLib.ProductionSafety.Settings.ViolationKind", "Kind")
                        .WithMany()
                        .HasForeignKey("KindId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Checkup");

                    b.Navigation("Department");

                    b.Navigation("Kind");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Settings.CheckupKind", b =>
                {
                    b.HasOne("IndustrialSafetyLib.ProductionSafety.Settings.CheckupType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Settings.CheckupType", b =>
                {
                    b.HasOne("IndustrialSafetyLib.ProductionSafety.Settings.CheckupNotififedBusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BusinessUnit");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Settings.ViolationKind", b =>
                {
                    b.HasOne("IndustrialSafetyLib.ProductionSafety.Settings.ViolationType", "ViolationType")
                        .WithMany()
                        .HasForeignKey("ViolationTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ViolationType");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Settings.ViolationType", b =>
                {
                    b.HasOne("IndustrialSafetyLib.ProductionSafety.Settings.ViolationGroup", "ViolationGroup")
                        .WithMany()
                        .HasForeignKey("ViolationGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ViolationGroup");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("IndustrialSafetyLib.CoreEntities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("IndustrialSafetyLib.CoreEntities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndustrialSafetyLib.CoreEntities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("IndustrialSafetyLib.CoreEntities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IndustrialSafetyLib.Company.BusinessUnit", b =>
                {
                    b.HasOne("IndustrialSafetyLib.Company.Employee", "CEO")
                        .WithMany()
                        .HasForeignKey("CEOId");

                    b.HasOne("IndustrialSafetyLib.Company.BusinessUnit", "HeadCompany")
                        .WithMany()
                        .HasForeignKey("HeadCompanyId");

                    b.Navigation("CEO");

                    b.Navigation("HeadCompany");
                });

            modelBuilder.Entity("IndustrialSafetyLib.CoreEntities.GroupMember", b =>
                {
                    b.HasOne("IndustrialSafetyLib.CoreEntities.Group", null)
                        .WithMany("Members")
                        .HasForeignKey("GroupId");

                    b.HasOne("IndustrialSafetyLib.CoreEntities.Recipient", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Deals.PlaceInitBusinessUnit", b =>
                {
                    b.HasOne("IndustrialSafetyLib.Company.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndustrialSafetyLib.Deals.PlaceInit", null)
                        .WithMany("BusinessUnits")
                        .HasForeignKey("PlaceInitId");

                    b.Navigation("BusinessUnit");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Deals.PlaceInitDepartment", b =>
                {
                    b.HasOne("IndustrialSafetyLib.ProductionSafety.Checkups.Checkup", null)
                        .WithMany("Departments")
                        .HasForeignKey("CheckupId");

                    b.HasOne("IndustrialSafetyLib.Company.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndustrialSafetyLib.Deals.PlaceInit", null)
                        .WithMany("Departments")
                        .HasForeignKey("PlaceInitId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Checkups.CheckupDepartment", b =>
                {
                    b.HasOne("IndustrialSafetyLib.Company.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Checkups.ViolationResponsible", b =>
                {
                    b.HasOne("IndustrialSafetyLib.Company.Employee", "Responsible")
                        .WithMany()
                        .HasForeignKey("ResponsibleId");

                    b.Navigation("Responsible");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Settings.CheckupNotififedBusinessUnit", b =>
                {
                    b.HasOne("IndustrialSafetyLib.Company.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BusinessUnit");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Settings.CheckupTypeNotificationSetting", b =>
                {
                    b.HasOne("IndustrialSafetyLib.ProductionSafety.Settings.CheckupType", null)
                        .WithMany("NotificationSettings")
                        .HasForeignKey("CheckupTypeId");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Company.Employee", b =>
                {
                    b.HasOne("IndustrialSafetyLib.Company.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndustrialSafetyLib.Company.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndustrialSafetyLib.Company.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndustrialSafetyLib.Company.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.HasOne("IndustrialSafetyLib.Parties.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndustrialSafetyLib.CoreEntities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("BusinessUnit");

                    b.Navigation("Department");

                    b.Navigation("JobTitle");

                    b.Navigation("Manager");

                    b.Navigation("Person");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Parties.Person", b =>
                {
                    b.HasOne("IndustrialSafetyLib.Commons.Country", "Citizenship")
                        .WithMany()
                        .HasForeignKey("CitizenshipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndustrialSafetyLib.Commons.Sex", "Sex")
                        .WithMany()
                        .HasForeignKey("SexId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Citizenship");

                    b.Navigation("Sex");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Company.Department", b =>
                {
                    b.HasOne("IndustrialSafetyLib.Company.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndustrialSafetyLib.Company.Department", "HeadOffice")
                        .WithMany()
                        .HasForeignKey("HeadOfficeId");

                    b.HasOne("IndustrialSafetyLib.Company.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.Navigation("BusinessUnit");

                    b.Navigation("HeadOffice");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("IndustrialSafetyLib.Deals.PlaceInit", b =>
                {
                    b.Navigation("BusinessUnits");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Checkups.Checkup", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("IndustrialSafetyLib.ProductionSafety.Settings.CheckupType", b =>
                {
                    b.Navigation("NotificationSettings");
                });

            modelBuilder.Entity("IndustrialSafetyLib.CoreEntities.Group", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
